#include <iostream> // Подключаем библиотеку iostream, которая позволяет использовать ввод и вывод данных.
#include <stack> // Подключаем библиотеку stack, которая позволяет использовать структуру данных "стек".
#include <sstream> // Подключаем библиотеку sstream, которая позволяет обрабатывать строки как потоки.
using namespace std; // Используем пространство имен std, чтобы не писать std:: перед каждым вызовом функции из этого пространства имен.
 
int main() { // Начало основной функции программы.
   string input; // Объявляем строковую переменную для хранения входных данных.
   getline(cin, input); // Считываем строку ввода.
   istringstream iss(input); // Создаем входной поток из строки.
   stack<int> st; // Объявляем стек для хранения чисел.
   string token; // Объявляем строковую переменную для хранения текущего токена.
   while (iss >> token) { // Запускаем цикл, который продолжается, пока есть токены в потоке.
       if (token == "+" || token == "-" || token == "*") { // Если текущий токен - это операция...
           int b = st.top(); st.pop(); // ...то берем верхний элемент стека и удаляем его из стека.
           int a = st.top(); st.pop(); // Делаем то же самое для следующего элемента стека.
           if (token == "+") { // Если текущая операция - это сложение...
               st.push(a + b); // ...то добавляем в стек сумму двух чисел.
           } else if (token == "-") { // Если текущая операция - это вычитание...
               st.push(a - b); // ...то добавляем в стек разность двух чисел.
           } else { // Если текущая операция - это умножение...
               st.push(a * b); // ...то добавляем в стек произведение двух чисел.
           }
       } else { // Если текущий токен - это число...
           st.push(stoi(token)); // ...то добавляем его в стек.
       }
   }
   cout << st.top() << endl; // Выводим верхний элемент стека, который является результатом вычисления выражения.
   return 0; // Завершаем функцию main и возвращаем 0, что означает успешное выполнение программы.
}
