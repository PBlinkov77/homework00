#include <iostream> // Подключаем библиотеку iostream, которая позволяет использовать ввод и вывод данных.
#include <unordered_set> // Подключаем библиотеку unordered_set, которая позволяет использовать структуру данных "хэш-множество".
#include <string> // Подключаем библиотеку string, которая позволяет работать со строками.
using namespace std; // Используем пространство имен std, чтобы не писать std:: перед каждым вызовом функции из этого пространства имен.
 
int main() { // Начало основной функции программы.
   ios_base::sync_with_stdio(false); // Отключаем синхронизацию потоков C и C++, что ускоряет ввод и вывод данных.
   cin.tie(NULL); // Отключаем привязку потока ввода к потоку вывода, что также ускоряет ввод и вывод данных.
 
   unordered_set<string> set; // Объявляем хэш-множество для хранения строк.
   string operation, word; // Объявляем две строковые переменные для хранения операции и слова.
 
   while (cin >> operation >> word, operation != "#") { // Запускаем цикл, который продолжается, пока операция не равна "#".
       if (operation == "+") { // Если операция - это добавление...
           set.insert(word); // ...то добавляем слово в множество.
       } else if (operation == "-") { // Если операция - это удаление...
           set.erase(word); // ...то удаляем слово из множества.
       } else if (operation == "?") { // Если операция - это проверка принадлежности...
           cout << (set.count(word) ? "YES" : "NO") << "\n"; // ...то выводим "YES", если слово присутствует в множестве, и "NO" в противном случае.
       }
   }
 
   return 0; // Завершаем функцию main и возвращаем 0, что означает успешное выполнение программы.
}
